/*************************************
wheelfixes.wresl
 
Dan Easton (11/12/2010)
Nancy Parker (12/29/2010)

! fix elements of CVP/SWP operations to facilitate wheeling accounting
! If exports are to be constrained by BO elements relative to cycle 1
! solution, then no wheeling should take place.  Otherwise, apply the 
! same kind of fixes that are applicable to wheeling operation in other
! regulatory environments.

**************************************/

goal fixSwpPumping1 {
  lhs     D_Banks_swp
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Banks_swp[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixSWPTDPumping {
	lhs D_Banks_swp_TD
	case Wheeling {
		condition always !wheeling_ctrl > 0.1 .and. (CVC_ON + JPOD_ON) > 0.1
		rhs D_Banks_swp_TD[B2_BO]
		lhs>rhs penalty 99999
		lhs<rhs penalty 99999
	}
}
goal fixSwpPumping2 {
  lhs     D_Banks_EXP1
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Banks_EXP1[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixSwpPumping3 {
  lhs     D_Banks_EXP2
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Banks_EXP2[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixCvpPumping1 {
  lhs     D_Jones
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Jones[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixCvpPumping2 {
  lhs     D_Jones_EXP1
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Jones_EXP1[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixCvpPumping3 {
  lhs     D_Jones_EXP2
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Jones_EXP2[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixCVP_TD_Pumping {
  lhs     D_Jones_TD
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Jones_TD[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixNBPumping {
  lhs     D_Napa
  rhs     D_Napa[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999
}

goal fixfeatherinflow {
  lhs     c_YubFea
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     c_YubFea[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixcvprefuge {
  lhs     D_CVPJUSWP
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_CVPJUSWP[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixsouthbay {
  lhs     D_Sbay
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_Sbay[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixONeillFBSWP {
  lhs     D_ONeillFBSWP
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_ONeillFBSWP[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixSL {
  lhs     S_SLSWP
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     S_SLSWP[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixSLin {
  lhs     D_OFBSWP
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     D_OFBSWP[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixterminals {
  lhs     C_CVC
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     C_CVC[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixUNUSEDFS {
  lhs     UNUSED_FS
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     UNUSED_FS[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixUNUSEDSS {
  lhs     UNUSED_SS
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     UNUSED_SS[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixSWPDS {
  lhs     SWPDS
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     SWPDS[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixSHADS {
  lhs     SHADS
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     SHADS[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixFOLDS {
  lhs     FOLDS
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     FOLDS[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
goal fixWHSSW {
  lhs     WHSSW
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     WHSSW[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixUWFE {
  lhs     UWFE
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     UWFE[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixIBU {
  lhs     IBU
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     IBU[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}

goal fixSurplus {
  lhs     C_Delta_SWP + C_Delta_CVP + Surp1Terms + Surp2Terms
  case Wheeling {
  condition always !wheeling_ctrl > .1 .and. (CVC_ON + JPOD_ON)>.1
  rhs     C_Delta_SWP[B2_BO] + C_Delta_CVP[B2_BO]
  lhs>rhs penalty 99999
  lhs<rhs penalty 99999}
}
