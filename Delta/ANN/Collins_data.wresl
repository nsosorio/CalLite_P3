/************************************
Collins_data.wresl

Hao Xie DWR 6/24/2010

ARTIFICIAL NEURAL NETWORK IMPLEMENTATION - COLLINSVILLE

Collinsville salinity standard:
month       ECstandard
1           19.0
2           15.5
3           15.5
4           12.5
5            8.0
6            8.0
7           11.0
8           11.0

Add a switch to turn off D1641/D1485 constrain at Collins
Z.Q. Richard Chen; DWR; (02/07/2011)
************************************/

! calculate previous month's value of salinity
define CO_EC_Month_sv {
          case DRegsOff{
            condition CO_DLTSW == 0
            value 99000.}
  case lastWaterYear {
    condition  month == Oct
      value  AnnEC(C_Hood(-5),C_Hood(-4),C_Hood(-3),C_Hood(-2),C_Hood(-1),
               D_ExpTD(-5),D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
               SJR_ANN(-5),SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),
               DXC_daysopen(-5),DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),
               net_DICU(-5),net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),
               sac_oth(-5),sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),
               exp_oth(-5),exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),
               VERNWQFINAL(-5),VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),
               int(daysindv(-5)),int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),
               int(CO),int(monthly_avg),12,(wateryear-1))}
  case others {
    condition always
      value  AnnEC(C_Hood(-5),C_Hood(-4),C_Hood(-3),C_Hood(-2),C_Hood(-1),
               D_ExpTD(-5),D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
               SJR_ANN(-5),SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),
               DXC_daysopen(-5),DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),
               net_DICU(-5),net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),
               sac_oth(-5),sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),
               exp_oth(-5),exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),
               VERNWQFINAL(-5),VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),
               int(daysindv(-5)),int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),
               int(CO),int(monthly_avg),(month-1),wateryear)}
}
define CO_EC_Month {std kind 'SALINITY' units 'UMHOS/CM'}
goal setCO_EC_MON {CO_EC_Month = CO_EC_Month_sv}

!****************************************************************************************

! define the EC standard for Collinsville (millimhos/cm)
define CO_EC_STD_lookup {
          case DRegsOff{
            condition CO_DLTSW == 0
            value 99.}
  case OctToMay {
    condition  month >=OCT .and. month <=MAY
    select     ECstandard1
    from       salinity_std_col
    where      month=month}
  case NoStandard {
    condition  always
    value  99.0}
}
define CO_EC_STD_sv { value CO_EC_STD_lookup * 1000.0 }
define CO_EC_STD {std kind 'SALINITY' units 'UMHOS/CM'}
goal COECstandout {CO_EC_STD = CO_EC_STD_sv}

!****************************************************************************************
!get slope and intercept for constraint exp<=m*sac+b

define CO_b_sv {
          case DRegsOff{
            condition CO_DLTSW == 0
            value 999999.}
  case control{
    condition month >= Oct .and. month <= May
    value  AnnLineGen(C_Hood_ANN(-4),C_Hood_ANN(-3),C_Hood_ANN(-2),C_Hood_ANN(-1),
                    D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
                    SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),SJR_ann_est,
                    DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),DXC_est,
                    net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),net_delta_cu,
                    sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),sac_oth_est,
                    exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),exp_oth_est,
                    VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),VERNWQFINALsv,
                    int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),daysin,
                    CO_EC_STD_sv,line_CO_lo,line_CO_hi,
                    int(CO),int(intercept),int(ann_type),month,wateryear,4)}
  case other {
    condition  always
    value 999999.}
}
define CO_m_sv {
          case DRegsOff{
            condition CO_DLTSW == 0
            value 0.}
  case reducecalls {
    condition  CO_b_sv >= 999990.
    value 0.}
  case control{
    condition month >= Oct .and. month <= May
    value  AnnLineGen(C_Hood_ANN(-4),C_Hood_ANN(-3),C_Hood_ANN(-2),C_Hood_ANN(-1),
                    D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
                    SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),SJR_ann_est,
                    DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),DXC_est,
                    net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),net_delta_cu,
                    sac_oth(-4),sac_oth(-3),sac_oth(-2), sac_oth(-1), sac_oth_est,
                    exp_oth(-4),exp_oth(-3),exp_oth(-2), exp_oth(-1), exp_oth_est,
                    VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),VERNWQFINALsv,
                    int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),daysin,
                    CO_EC_STD_sv,line_CO_lo,line_CO_hi,
                    int(CO),int(slope),int(ann_type),month,wateryear,4)}
  case other {
    condition  always
    value 0.}
}
define CO_m {lower unbounded upper unbounded kind 'SLOPE' units 'NONE'}
define CO_b {lower unbounded upper unbounded kind 'INTERCEPT' units 'NONE'}
goal setCO_m {CO_m = CO_m_sv}
goal setCO_b {CO_b = CO_b_sv}

!********************************************************************
!Get the required Sac flow for ZERO exports
define CO_Sac_ZeroExp_sv1 {
          case DRegsOff{
            condition CO_DLTSW == 0
            value 0.}
  case NoSalinityControlPossible{
    condition abs(CO_m_sv) <= 0.001 .and. int(CO_b_sv) == 0
    value 0.}
  case NegSlope{
    condition CO_m_sv <= 0.0
    value 0.}
  case NegCarriage{
    condition CO_m_sv >= 1.0
    value 0.}
  case control{
    condition month >= Oct .and. month <= May
    value -CO_b_sv/CO_m_sv}
  case other {
    condition  always
    value 0.}
}
define CO_Sac_ZeroExp_sv2 {value max(0.0,CO_Sac_ZeroExp_sv1)}
define CO_Sac_ZeroExp {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setCO_Sac_ZeroExp {CO_Sac_ZeroExp = CO_Sac_ZeroExp_sv2}
