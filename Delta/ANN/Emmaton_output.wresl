/*************************************
Emmaton_output.wresl

Nazrul Islam; DWR; (06/27/2010)

Add a switch to turn off D1641 constrain at Emmaton
Z.Q. Richard Chen; DWR; (02/07/2011)
*************************/

!Maximum export given the sacramento river flow
define EM_MaxExport {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setEMMax {
  lhs EM_MaxExport
  case DRegsOff{
    condition EM_DLTSW == 0
    rhs 999999.}
  case NoSalinityControlPossible{
    condition abs(EM_m_sv) <= 0.001 .and. int(EM_b_sv) == 0
    rhs ExportCap}
  case NegSlope{
    condition EM_m_sv <= 0.0
    rhs 999999.}
  case HighCost{
    condition EM_Sac_ZeroExp_sv2 >= ANNcap
    rhs ExportCap}
  /*case NegCarriage{
    condition abs(EM_m_sv) >= 1.0
    rhs 999999.}*/
  case Normal {
    condition always
    rhs EM_m_sv*C_Hood_ANN + EM_m_sv*C_YoloBP + EM_b_sv}
}

!****************************************************************************************

! required delta outflow given exports

define EM_MRDO {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setEMmrdo {
  lhs EM_MRDO
  case DRegsOff{
    condition EM_DLTSW == 0
    rhs 0.}  
  case NoSalinityControlPossible{
    condition abs(EM_m_sv) <= 0.001 .and. int(EM_b_sv) == 0
    rhs 0.}
  case NegSlope{
    condition EM_m_sv <= 0.0
    rhs 0.}
  case HighCost{
    condition EM_Sac_ZeroExp_sv2 >= ANNcap
    rhs 0.}
  /*case NegCarriage{
    condition abs(EM_m_sv) >= 1.0
    rhs 999999.}*/
  case Normal {
    condition always
    rhs ((1-EM_m_sv)/EM_m_sv)*D_ExpTD - EM_b_sv/EM_m_sv + netDeltaInflow}
}

!****************************************************************************************

! required sac flow given exports

define EM_ReqSac {lower unbounded upper unbounded kind 'FLOW' units 'cfs'}
goal set_EM_ReqSac {
  lhs EM_ReqSac
  case DRegsOff{
    condition EM_DLTSW == 0
    rhs 0.}  
  case NoSalinityControlPossible{
    condition abs(EM_m_sv) <= 0.001 .and. int(EM_b_sv) == 0
    rhs 0.}
  case NegSlope{
    condition EM_m_sv <= 0.0
    rhs 0.}
  case HighCost{
    condition EM_Sac_ZeroExp_sv2 >= ANNcap
    rhs 0.}
  /*case NegCarriage{
    condition abs(EM_m_sv) >= 1.0
    rhs 999999.}*/
  case Normal {
    condition always
    rhs D_ExpTD/EM_m_sv - EM_b_sv/EM_m_sv}
}
