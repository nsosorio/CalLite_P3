!M. Reginato 08/07/2009 IFDiversion Criteria  per BDCP Draft Proposed
!Long Term BDCP Water Operations Range of Criteria (July16,2009)
/*
If SAC river flow is between minrangeN and maxrangeN the bypass requirement is:
minbypN + coefN * the amount over the maxrangeN

where N is one of the 4 flow ranges specified in the Draft Proposed Long Term BDCP

Input tables to this code, each scenario(Range A, Proposed Ops and Range B) will have a different set of tables
IFBypassFlows.table
IFBypassFlows_1.table
IFBypassFlows_2.table

*/

!Split of C_Freeport/C169 according to Diversion capabilities
define int_hoodbyps0  {INTEGER std kind 'INTEGER' units 'NONE'}
define int_hoodbyps1  {INTEGER std kind 'INTEGER' units 'NONE'}
define int_hoodbyps2  {INTEGER std kind 'INTEGER' units 'NONE'}
define int_hoodbyps3  {INTEGER std kind 'INTEGER' units 'NONE'}

!Get Coefficients that limits diversions from lookup table
define maxrange1 {
 	case DryCritical { condition wyt_SAC >=4 .and. month>=DEC .and. month<=JUN       !Case DryCritical applied only for Prop Ops(Dec-Jun)
		 value 9000. }
	case other {condition always
		select maxv from IFBypassFlows where qRange = 1}
}
define maxrange2 {select maxv from IFBypassFlows where qRange = 2}
define maxrange3 {select maxv from IFBypassFlows where qRange = 3}
define maxrange4 {select maxv from IFBypassFlows where qRange = 4}

define deltarange1 {value maxrange1}
define deltarange2 {value maxrange2-maxrange1}
define deltarange3 {value maxrange3-maxrange2}
define deltarange4 {value maxrange4-maxrange3}

define coef1 {select Range1 from IFBypassFlows_1 where month=month}
define coef2 {select Range2 from IFBypassFlows_1 where month=month}
define coef3 {select Range3 from IFBypassFlows_1 where month=month}
define coef4 {select Range4 from IFBypassFlows_1 where month=month}
define coef5 {select switch from IFBypassFlows_1 where month=month}

define minbyp1 {select min1 from IFBypassFlows_2 where month=month}
define minbyp2 {
	case DryCritical { condition wyt_SAC >=4 .and. month>=DEC .and. month<=JUN       !Case DryCritical applied only for Prop Ops
		 value 9000. }
	case other {condition always
		  select min2 from IFBypassFlows_2 where month=month }
}

define minbyp3 {select min3 from IFBypassFlows_2 where month=month}
define minbyp4 {select min4 from IFBypassFlows_2 where month=month}

!define min_bypassq {select minbypass from IFDiversionCriteria where month=month}
!define shldr_boost {select shldr from IFDiversionCriteria where month=month}
!define Hood_require {value  min_bypassq}

define C_Freeport_0 {upper maxrange1 lower 0. kind 'flow-channel' units 'cfs'}
define C_Freeport_1 {upper maxrange2 lower 0. kind 'flow-channel' units 'cfs'}
define C_Freeport_2 {upper maxrange3 lower 0. kind 'flow-channel' units 'cfs'}
define C_Freeport_3 {upper maxrange4 lower 0. kind 'flow-channel' units 'cfs'}


!Definition of Minimum bypass flow

!define C_Freeport_HOODREQ {alias Hood_require kind 'FLOW-CHANNEL' units 'CFS' }
goal setinthbypsssum {  int_hoodbyps0+int_hoodbyps1+int_hoodbyps2+int_hoodbyps3 = 1.}

!Local Continuity, split of SAC river in bins
goal setC_Freeport_part {C_Freeport = C_Freeport_0 + C_Freeport_1 + C_Freeport_2+ C_Freeport_3}

goal setC_Freeport_0  {C_Freeport_0 > int_hoodbyps1*deltarange1+int_hoodbyps2*deltarange1+int_hoodbyps3*deltarange1}
goal setC_Freeport_1a {C_Freeport_1 < int_hoodbyps1*deltarange2+int_hoodbyps2*deltarange2+int_hoodbyps3*deltarange2}

goal setC_Freeport_1b  {C_Freeport_1 > int_hoodbyps2*deltarange2+int_hoodbyps3*deltarange2}
goal setC_Freeport_2a  {C_Freeport_2 < int_hoodbyps2*deltarange3+int_hoodbyps3*deltarange3}

goal setC_Freeport_2b  {C_Freeport_2 > int_hoodbyps3*deltarange3}
goal setC_Freeport_3   {C_Freeport_3 < int_hoodbyps3 *maxrange4}


! Minimum flow definition
goal requirement0 { C_Freeport_BFMIN > minbyp1*int_hoodbyps0*coef5 + C_Freeport_0*coef1}
goal requirement1 { C_Freeport_BFMIN > minbyp2*int_hoodbyps1*coef5 + C_Freeport_1*coef2 - int_hoodbyps0*99999.}
goal requirement2 { C_Freeport_BFMIN > minbyp3*int_hoodbyps2*coef5+ C_Freeport_2*coef3 - int_hoodbyps0*999999.- int_hoodbyps1*99999.}
goal requirement3 { C_Freeport_BFMIN > minbyp4*int_hoodbyps3*coef5+ C_Freeport_3*coef4- int_hoodbyps0*999999. - int_hoodbyps1*999999. - int_hoodbyps2*99999.}
goal requirement4 { C_Freeport_BFMIN < minbyp4+ C_Freeport_3*coef4 }


!goal setC_Freeport_ifmin {C_Freeport = C_Freeport_BFMIN + C_Freeport_BFEXC + C_Freeport_HoodIF}
goal setC_Freeport_ifmin {C_Freeport = C_Freeport_BFMIN + C_Freeport_HoodIF}

!Cap IF diversion
goal setD400_169 {
	lhs D_HoodIF
	case other {
	condition always
  	rhs C_Freeport_HoodIF lhs<rhs penalty 0.}
 }

!****************************END***************************************








