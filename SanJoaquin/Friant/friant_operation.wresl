! Friant_operation.wresl
! Determination of Friant San Joaquin River minimum release
! Revised by C. Hsu, 02/25/03, USBR for review and documentation project
!##############################################################################
/*
This file defines the Madera and Friant-Kern Canal demands and deliveries
*/
! Define Fraint-Kern Canal Demands
define demand_D_FKCNL {std kind 'Friant-Demand' units 'TAF' }
! Define Madera Canal demands
define demand_D_MDRCNL {std kind 'Friant-Demand' units 'TAF' }
! Friant-Kern Canal release
goal set_FK_release { demand_D_FKCNL = D_FKCNL_ini - FK_Adj + FK_add }
! Madera Canal release
goal set_Madera_release { demand_D_MDRCNL = D_MDRCNL_ini + Madera_add }

/*
This file defines the total deliveries from Friant which includes Madera Canal and Friant-Kern Class I & II, canal losses,
and additional delivery
*/
! Total delivery from Friant
define total_Fr_del {
    value    Madera_C1_del + Madera_C2_del + Madera_loss + Madera_add
             + FK_C1_del + FK_C2_del + FK_loss - FK_Adj + FK_add }

! Friant Kern canal Class 2 water including adjustment
define FK_final_C2 {value FK_C2_del - FK_Adj}
define FK_final_C2_ {alias fk_c2_del kind 'temp' units 'taf'}
define FK_adj_ {alias fk_adj kind 'temp' units 'taf'}


! Define total canal adjustments to river release
define Fr_tot_adj { value FK_adj - FK_add - Madera_add }
! Snowmelt release (SJR) determination, total snowmelt release minus 215 delivery of snowmelt release
define Fr_snow_rel { value max(0.0,(fr_for_spill_cor * Fr_srp / 100.) - FK_add - Madera_add) }

/*
Snowmelt release
C_MLRTNA target is computed considering releases that will be made for minimum
flows and deliveries.  So C_MLRTNA is above and beyond C_MLRTNM.
*/

define est_RF_to_MC {value max(0.0, SIO(-1) + I_MLRTN *cfs_taf - curr_Fr_del - Friant_est_evap
			- (S_MLRTNlevel5 + S17level3 + mam_fc_credit  - Friant_fs_req) - Madera_add - FK_add)}

define max_SM_to_MC {value max(0.,min(Fr_snow_rel, Madera_cap_head * cfs_taf - D_MDRCNL_ini - Madera_add))}

!Limit Madera Surplus release to estimated snowmelt release and flood release
goal lim_D18F_surplus {D18F < est_RF_to_MC*taf_cfs + max_SM_to_MC*taf_cfs}

!Limit SWP and CVP Madera Canal flows to flood flows
goal limMadSWPCVPdiv {D_MDRCNL_SWP + D_MDRCNL_CVP < D18F}

!Limit C_MLRTNA to snowmelt release

!goal set_C_MLRTNA { C_MLRTNA < Fr_snow_rel * taf_cfs}

!During flood or snowmelt spills, approximately 7% of the spill will be to Madera Canal capped at 1000 cfs with half
!going to the Fresno River and half going to Chowchilla

goal set_D18f_max {D18F < max(0., Madera_cap_head - D_MDRCNL_ini * taf_cfs - Madera_add * taf_cfs) }
goal lim_D18F_by_C_MLRTNAandF {D18F < 0.07*C_MLRTNF}
goal lim_D18F_1000 {D18F < 1000}
goal set_D18F {D18F = D590F + C_MdrcnlF}
goal set_C_Mdrcnl_16B {C_Mdrcnl_16B = D_Chowr1_16B}
define srp_C_MdrcnlF {std kind 'soft-const' units 'cfs'}
define slk_C_MdrcnlF {std kind 'soft-const' units 'cfs'}
goal share_D18F {C_MdrcnlF - D590F + slk_C_MdrcnlF - srp_C_MdrcnlF = 0}

!Route Madera 16B water
goal route_Mad_16B {D_MDRCNL_16B = D590_16B + D_Chowr1_16B}

!Subdivide Madera Canal 16B water into direct and in-lieu recharge.
define D_Chowr1_16B_DR {std kind 'flow-delivery' units 'cfs'}
define D_Chowr1_16B_IL {std kind 'flow-delivery' units 'cfs'}
define D_Chowr1_16B_PC {std kind 'flow-delivery' units 'cfs'}
define D590_16B_DR {std kind 'flow-delivery' units 'cfs'}
define D590_16B_IL {std kind 'flow-delivery' units 'cfs'}
define D590_16B_PC {std kind 'flow-delivery' units 'cfs'}

goal split_D_Chowr1_16B {D_Chowr1_16B = D_Chowr1_16B_DR + D_Chowr1_16B_IL + D_Chowr1_16B_PC}
goal split_D590_16B {D590_16B = D590_16B_DR + D590_16B_IL + D590_16B_PC}

goal lim_D590_16B_DR {D590_16B_DR < 200}
goal lim_D590_16B_IL {D590_16B_IL < 0}
goal lim_D_Chowr1_16B_DR {D_Chowr1_16B_DR < 175}

define Mad_ag_pat_pct {
    select percent
    from Madera_delivery_total
    given delivery = 1500.
    use minimum
    where contract_month = contract_month }

goal lim_D_Chowr1_16B_IL {D_Chowr1_16B_IL < 25.*Mad_ag_pat_pct/24.}

define lim_Mad_16B_PC {
	case	Demand {
		condition	range(month,dec,jan) .and. I_ESTMN < 30*taf_cfs
		value		1122.
	}
	case	NoDemand {
		condition	always
		value		0.
	}
}

goal set_lim_D_Chowr1_16B_PC {D_Chowr1_16B_PC < 0.85*lim_Mad_16B_PC}
goal set_lim_D590_16B_PC {D590_16B_PC < 0.15*lim_Mad_16B_PC}

define tot_mad_16B_ {std kind 'annual-delivery' units 'taf'}

define tot_mad_16B {
	case October {
		condition	month == oct
		value		0.0
	}
	case otherwise {
		condition	always
		value		(D590_16B(-1) + D_CHOWR1_16B(-1) - D590_16B_PC(-1) - D_CHOWR1_16B_PC(-1))*cfs_taf(-1) + tot_mad_16B_(-1)
	}
}

goal ann_mad_16B_lim {D_CHOWR1_16B + D590_16B - D_CHOWR1_16B_PC - D590_16B_PC < max(0., 35. - tot_mad_16B)*taf_cfs}

goal save_tot_mad_16B {tot_mad_16B_ = tot_mad_16B}



! Set limits on Friant-Kern Canal releases
!goal set_FK_rel { D_FKCNL_FWUA < demand_D_FKCNL * taf_cfs}
! Friant Kern Canal breakdown
goal set_D_FKCNL_C1 {D_FKCNL_C1 < FK_C1_del*taf_cfs}
goal set_D_FKCNL_main { D_FKCNL_C2 < max(0., FK_final_C2*taf_cfs)}
! Set limits on Friant Kern Canal 215 water
goal set_D_FKCNL_215 { D_FKCNL_215 < FK_add * taf_cfs }

! Set limits on Madera Canal releases
goal set_M_rel { D_MDRCNL < demand_D_MDRCNL * taf_cfs + D18F + tot_und_D18B_C1_*taf_cfs*Mad_C1_frc + tot_und_D18B_C2_*taf_cfs*Mad_tot_frc + D_MDRCNL_16B }
goal set_max_MC { D_MDRCNL < Madera_cap_head}
! Madera Canal breakdown
goal set_D_MDRCNL_C1 {D_MDRCNL_C1 < Madera_C1_del*taf_cfs + tot_und_D18B_C1_*taf_cfs*Mad_C1_frc }
goal set_D_MDRCNL_main { D_MDRCNL_C1 + D_MDRCNL_C2 < max(0., D_MDRCNL_ini * taf_cfs - Madera_loss*taf_cfs) + tot_und_D18B_C1_*taf_cfs*Mad_C1_frc + tot_und_D18B_C2_*taf_cfs*Mad_tot_frc }
! Set limits on Madera Canal 215 water
goal set_D_MDRCNL_215 { D_MDRCNL_215 < Madera_add * taf_cfs }

goal set_und_D18B_C1 {und_D18B_C1 - re_und_D18B_C1 = Madera_C1_del - D_MDRCNL_C1*cfs_taf}
goal set_und_D18b_c2 {und_D18B_C2 - re_und_D18B_C2 = Madera_C2_del - D_MDRCNL_C2*cfs_taf}
define und_D_FKCNL_C1 {alias FK_C1_del - D_FKCNL_C1*cfs_taf kind 'under-delivery' units 'taf'}
define und_D_FKCNL_C2 {alias FK_C2_del - D_FKCNL_C2*cfs_taf kind 'under-delivery' units 'taf'}

goal restrict_D16B_A {D_FKCNL_16B_A + D_MDRCNL_16B_A + D_FKCNL_215 + D_MDRCNL_215 < Fr_fc_rel*taf_cfs}

