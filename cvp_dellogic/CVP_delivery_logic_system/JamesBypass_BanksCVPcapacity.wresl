/*************************************
JamesBypass_BanksCVPcapacity.wresl

Tom FitzHugh BOR 5/7/2010

-Calculates water available from James Bypass to satisfy local demands.  This is minimum of 
inflow from bypass and demands.  Is computed during Mar, Apr, and May as total from that month
through August, then May-Aug value is used the rest of the summer.

-Calculates dedicated capacity for CVP at Banks (Mar-Aug total is used in Mar-May).  Currently 
this is always 0, but could be added in the future.
*************************************/


define jbypass_del {
  case Mar {
    condition month== MAR
    value     min(I_MDOTA*cfs_taf,dem_D_MDOTAa_pag + dem_D_MDOTAb_pex + dem_D_MDOTAc_prf + dem_D_MDOTAd_pls + dem_d608b_pex + dem_d608c_prf) +
              min(I_MDOTA(1)*cfs_taf(1),dem_D_MDOTAa_pag(1) + dem_D_MDOTAb_pex(1) + dem_D_MDOTAc_prf(1) + dem_D_MDOTAd_pls(1) + dem_d608b_pex(1) + dem_d608c_prf(1)) +
              min(I_MDOTA(2)*cfs_taf(2),dem_D_MDOTAa_pag(2) + dem_D_MDOTAb_pex(2) + dem_D_MDOTAc_prf(2) + dem_D_MDOTAd_pls(2) + dem_d608b_pex(2) + dem_d608c_prf(2)) +
              min(I_MDOTA(3)*cfs_taf(3),dem_D_MDOTAa_pag(3) + dem_D_MDOTAb_pex(3) + dem_D_MDOTAc_prf(3) + dem_D_MDOTAd_pls(3) + dem_d608b_pex(3) + dem_d608c_prf(3)) +
              min(I_MDOTA(4)*cfs_taf(4),dem_D_MDOTAa_pag(4) + dem_D_MDOTAb_pex(4) + dem_D_MDOTAc_prf(4) + dem_D_MDOTAd_pls(4) + dem_d608b_pex(4) + dem_d608c_prf(4)) +
              min(I_MDOTA(5)*cfs_taf(5),dem_D_MDOTAa_pag(5) + dem_D_MDOTAb_pex(5) + dem_D_MDOTAc_prf(5) + dem_D_MDOTAd_pls(5) + dem_d608b_pex(5) + dem_d608c_prf(5)) }
  case Apr {
    condition month== APR
    value     min(I_MDOTA*cfs_taf,dem_D_MDOTAa_pag + dem_D_MDOTAb_pex + dem_D_MDOTAc_prf + dem_D_MDOTAd_pls + dem_d608b_pex + dem_d608c_prf) +
              min(I_MDOTA(1)*cfs_taf(1),dem_D_MDOTAa_pag(1) + dem_D_MDOTAb_pex(1) + dem_D_MDOTAc_prf(1) + dem_D_MDOTAd_pls(1) + dem_d608b_pex(1) + dem_d608c_prf(1)) +
              min(I_MDOTA(2)*cfs_taf(2),dem_D_MDOTAa_pag(2) + dem_D_MDOTAb_pex(2) + dem_D_MDOTAc_prf(2) + dem_D_MDOTAd_pls(2) + dem_d608b_pex(2) + dem_d608c_prf(2)) +
              min(I_MDOTA(3)*cfs_taf(3),dem_D_MDOTAa_pag(3) + dem_D_MDOTAb_pex(3) + dem_D_MDOTAc_prf(3) + dem_D_MDOTAd_pls(3) + dem_d608b_pex(3) + dem_d608c_prf(3)) +
              min(I_MDOTA(4)*cfs_taf(4),dem_D_MDOTAa_pag(4) + dem_D_MDOTAb_pex(4) + dem_D_MDOTAc_prf(4) + dem_D_MDOTAd_pls(4) + dem_d608b_pex(4) + dem_d608c_prf(4)) }
  case May {
    condition month== MAY
    value     min(I_MDOTA*cfs_taf,dem_D_MDOTAa_pag + dem_D_MDOTAb_pex + dem_D_MDOTAc_prf + dem_D_MDOTAd_pls + dem_d608b_pex + dem_d608c_prf) +
              min(I_MDOTA(1)*cfs_taf(1),dem_D_MDOTAa_pag(1) + dem_D_MDOTAb_pex(1) + dem_D_MDOTAc_prf(1) + dem_D_MDOTAd_pls(1) + dem_d608b_pex(1) + dem_d608c_prf(1)) +
              min(I_MDOTA(2)*cfs_taf(2),dem_D_MDOTAa_pag(2) + dem_D_MDOTAb_pex(2) + dem_D_MDOTAc_prf(2) + dem_D_MDOTAd_pls(2) + dem_d608b_pex(2) + dem_d608c_prf(2)) +
              min(I_MDOTA(3)*cfs_taf(3),dem_D_MDOTAa_pag(3) + dem_D_MDOTAb_pex(3) + dem_D_MDOTAc_prf(3) + dem_D_MDOTAd_pls(3) + dem_d608b_pex(3) + dem_d608c_prf(3)) }
  case other {
    condition always
    value     0. }
}

define jbypass_deldv {alias jbypass_del kind 'DELIV-CAPACITY' units 'TAF'}

define BanksMaxCVP6 {select CVPDedCap from BanksLimits where month=6 } !Mar
define BanksMaxCVP7 {select CVPDedCap from BanksLimits where month=7 } !Apr
define BanksMaxCVP8 {select CVPDedCap from BanksLimits where month=8 } !May
define BanksMaxCVP9 {select CVPDedCap from BanksLimits where month=9 } !Jun
define BanksMaxCVP10 {select CVPDedCap from BanksLimits where month=10 } !Jul
define BanksMaxCVP11 {select CVPDedCap from BanksLimits where month=11 } !Aug

define AnnualBanksCVPdv {std kind 'flow' units 'taf'}

define AnnualBanksCVP {
  case Mar {
    condition month== MAR
    value     BanksMaxCVP6*cfs_taf(1) + BanksMaxCVP7*cfs_taf(2) + BanksMaxCVP8*cfs_taf(3) + BanksMaxCVP9*cfs_taf(4) +
          BanksMaxCVP10*cfs_taf(5) + BanksMaxCVP11*cfs_taf(6) }
  case AprMay {
    condition month==Apr .or. month==May
    value     AnnualBanksCVPdv(-1) }
  case other {
    condition always
    value     0. }
}

goal setAnnualBanksCVPdv {AnnualBanksCVPdv = AnnualBanksCVP}













































