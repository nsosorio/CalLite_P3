! VAMP_Bound.wresl
! Edward Chang
! 5/01/2000
! Joint Model
! This code bounds decision variables using monthly weighted constraints for cycle 6 only
! Revised by C. Hsu, 3/6/03, USBR, for review and documentation project
!########################################################################################
/*
VAMP releases from SJRAG members
*/

!define VAMP_reqdv {std kind 'flow-requirement' units 'cfs'}
! VAMP requirement for April- May window
goal setVAMP_reqdv {
    lhs     VAMP_reqdv
    case    AprilMay {
        condition   month >= apr .and. month <= may
        rhs         VAMP_reqdv[VAMP_AND_DO] }
        case    otherwise {
            condition always
        rhs 0. }
        }

define VAMP_defdv { std kind 'flow-deficiency' units 'cfs'}
! VAMP deficiency window
goal setVAMP_defdv {
    lhs     VAMP_defdv
    case    AprilMay {
        condition   month >= apr .and. month <= may
        rhs         VAMP_defdv[VAMP_AND_DO] }
        }

! Restrict Exchange contractors deliveries (due to reduction for VAMP)
goal restrD_MDOTAB {
     lhs  D_MDOTAB
     case April {
          condition month == apr
          rhs       14.*D_MDOTAB[SJR_WQ1]/30. + 16.*D_MDOTAB[VAMP_AND_DO]/30.
          lhs<rhs   penalty 0. }
     case MayOnly {
          condition  month == may
          rhs       15.*D_MDOTAB[VAMP_AND_DO]/31. + 16.*D_MDOTAB[SJR_WQ1]/31.
          lhs<rhs   penalty 0. }
          }

! Restrict DMC inflows to the Mendota Pool during pulse period
goal restr1C_CVPDMCcycle6 {
     lhs  C_CVPDMC
     case April {
          condition month == apr
          rhs       14.*C_CVPDMC[SJR_WQ1]/30. + 16.*C_CVPDMC[VAMP_AND_DO]/30. + 14.*C_SJRCB[SJR_WQ1]/30. + 16.*C_SJRCB[VAMP_AND_DO]/30. - C_SJRCB
          lhs<rhs   penalty 0. }
     case MayOnly {
          condition  month == may
          rhs       15.*C_CVPDMC[VAMP_AND_DO]/31. + 16.*C_CVPDMC[SJR_WQ1]/31. + 15.*C_SJRCB[VAMP_AND_DO]/31. + 16.*C_SJRCB[SJR_WQ1]/31. - C_SJRCB
          lhs<rhs   penalty 0. }
     case otherwise {
          condition always
          rhs        C_CVPDMC[SJR_WQ1] + C_SJRCB[SJR_WQ1] - C_SJRCB
          lhs<rhs   penalty 0. }
          }
! Restrict DMC inflows to Mendota Pool during non pulse period
goal restr2C_CVPDMCcycle6 {
     lhs  C_CVPDMC
     case April {
          condition month == apr
          rhs       14.*C_CVPDMC[SJR_WQ1]/30. + 16.*C_CVPDMC[VAMP_AND_DO]/30.
          lhs<rhs   penalty 99999
          lhs>rhs   penalty 99999 }
     case MayOnly {
          condition  month == may
          rhs       15.*C_CVPDMC[VAMP_AND_DO]/31. + 16.*C_CVPDMC[SJR_WQ1]/31.
          lhs<rhs   penalty 99999
          lhs>rhs   penalty 99999 }
     case otherwise {
          condition  always
          rhs       C_CVPDMC[SJR_WQ1]
          lhs<rhs   penalty 99999
          lhs>rhs   penalty 99999 }
          }

! Monthly average DMC water diverted away for VAMP (part of C_MDOTAB)
goal restr1C_MDOTABVAMPcycle6 {
     lhs  C_MDOTABVAMP
     case April {
          condition month == apr
          rhs       16.*C_MDOTABVAMP[VAMP_AND_DO]/30.
          lhs<rhs   penalty 0. }
     case MayOnly {
          condition  month == may
          rhs       15.*C_MDOTABVAMP[VAMP_AND_DO]/31.
          lhs<rhs   penalty 0. }
     case otherwise {
          condition always
          rhs       0. }
          }

! This code is the same as the code above, it needed to be checked.  (What is the difference between restr1 and restr2 CH ?)
goal restr2C_MDOTABVAMPcycle6 {
     lhs  C_MDOTABVAMP
     case April {
          condition month == apr
          rhs       16.*C_MDOTABVAMP[VAMP_AND_DO]/30.
          lhs>rhs   penalty 0. }
     case MayOnly {
          condition  month == may
          rhs       15.*C_MDOTABVAMP[VAMP_AND_DO]/31.
          lhs>rhs   penalty 0. }
          }

/*
April release
*/
! April added release from Merced ID in cycle 6
goal setMercedIDaddAprc6 { MercedIDaddApr =  MercedIDaddApr[VAMP_AND_DO] }
! April added release from OID in cycle 6
goal setOIDaddAprc6 { OIDaddApr = OIDaddApr[VAMP_AND_DO] }
! April added release from Exchange Contractors in cycle 6
goal setExchangeaddAprc6 { ExchangeaddApr = ExchangeaddApr[VAMP_AND_DO] }
! April added release from MID/TID in cycle 6
goal setMIDTIDaddAprc6 { MIDTIDaddApr = MIDTIDaddApr[VAMP_AND_DO] }

! VAMP requirement from New Don Pedro for MID/TID in cycle 6
goal setC_PEDROvampcycle6 {
    lhs  C_PEDROvamp
    case April {
        condition month == apr
        rhs       16. * C_PEDROVAMP[VAMP_AND_DO]/30.
          }
    case MayOnly {
        condition month == may
        rhs       15. * C_PEDROVAMP[VAMP_AND_DO]/31.
          }
    case otherwise {
        condition always
        rhs       0. }
          }
! VAMP requirement from McClure for Merced ID in cycle 6
goal setC_MCLREvampcycle6 {
    lhs  C_MCLREvamp
    case April {
        condition month == apr
        rhs       16. * C_MCLREVAMP[VAMP_AND_DO]/30.
          }
    case MayOnly {
        condition month == may
        rhs       15. * C_MCLREVAMP[VAMP_AND_DO]/31.
          }
    case otherwise {
        condition always
        rhs       0. }
          }
! VAMP requirement from New Melones for OID in cycle 6
goal setC_MELONVAMP_Mcycle6 {
    lhs  C_MELONVAMP_M
    case April {
        condition month == apr
        rhs       16. * C_MELONVAMP_M[VAMP_AND_DO]/30.
          }
    case MayOnly {
        condition month == may
        rhs       15. * C_MELONVAMP_M[VAMP_AND_DO]/31.
          }
    case otherwise {
        condition always
        rhs       0. }
          }
! New Melones owned to New Don Pedro in cycle 6
goal setC_PEDROSTANVAMPc6 {
    lhs  C_PEDRO_STAN_VAMP
    case April {
        condition month == apr
        rhs       16. * C_PEDRO_STAN_VAMP[VAMP_AND_DO]/30.
          }
    case MayOnly {
        condition month == may
        rhs       15. * C_PEDRO_STAN_VAMP[VAMP_AND_DO]/31.
          }
    case otherwise {
        condition always
        rhs       0. }
          }


/*
Instantaneous VAMP flow (15 or 16 day flow; not monthly averaged)
VAMP release from different sources
*/
! Instantaneous VAMP release from New Melones
goal setNMVamprelease {
    lhs  NMVamprelease
    rhs  C_MELONVamp_m[VAMP_AND_DO]
    }
! Instantaneous VAMP release from DMC
goal setDMCVamprelease {
    lhs  DMCVamprelease
    rhs  C_MDOTABVAMP[VAMP_AND_DO]
    }
! Instantaneous VAMP release from New Don Pedro
goal setDPVamprelease {
    lhs  DPVamprelease
    rhs  C_PEDROVamp[VAMP_AND_DO]
    }
! Instantaneous VAMP release from New Melones debt to New Don Pedro
goal setDPStanVamprel {
    lhs DPStanVamprel
    rhs C_PEDRO_STAN_VAMP[VAMP_AND_DO]
    }
! Instantaneous VAMP release from McClure
goal setMCVamprelease {
    lhs  MCVamprelease
    rhs  C_MCLREVAMP[VAMP_AND_DO]
    }

