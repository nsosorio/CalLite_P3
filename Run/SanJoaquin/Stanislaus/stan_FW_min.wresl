! stan_FW_min.wresl
! Edward Chang
! 12/02/1999
! Joint Model
! This code calculates the minimum fish and wildlife flows on the Stanislaus river
! Revised by R. Field, 01/15/2004, Reclamation, removed stanmin_add from cycle 1
! it exists in cycle 6 InstreamFromOID.wresl
! Revised by C. Hsu, 3/10/03, USBR, for review and documentation project
! Based on Modifications by Hilts 20090204 to hopefully eliminate the "transitional plan" - commented out use of "NMforecast3"
!#####################################################################################
/*
The minimum fish and wildlife flows are determined using the New Melones forecast, NMforeast1.
This forecast determines an annual delivery requirement from a look-up table.  From the annual
delivery requirement another look-up table is used to determine the monthly requirements.
In April and May, a pulse flow requirement is also calculated, but the pulse flow only applies
during the last 16 days in April and the first 15 days in May.  The goal of the resulting monthly
requirement is to maintain a minimum fish and wildlife flow downstream of Goodwin Dam.  To ensure
a minimum flow, it is only necessary to impose this requirement on reaches C_STANGDWN and C_STANRIPN
*/
/*
Fish & Wildlife flows
*/
!In April uses pre-RPA std (in order to set VAMP baseline), rest of year uses RPA std

/*define stanfish_yr {

    case STAN_RPAOFF{
         condition STAN_RPA == 0
         select stanf from stan_yr_90 given NMF = NMforecast1 use linear } ! every mon if RPA off 
    case April {
        condition month==APR .and. STAN_RPA == 1
        select stanf from stan_yr_90 given NMF = NMforecast1 use linear } 
    case notApr {
        condition always 
        select stanf from stan_yr given NMF = NMforecast1 use linear}
}*/
define stanfish_yr {select stanf from stan_yr given NMF = NMforecast1 use linear }

! Alias stanfish_yr for output
define stanfish_yrDV {alias stanfish_yr units 'taf'}

! Define minimum flows for Cycle 1 to be imposed on releases from New Melones
/*define stanmin {
    case STAN_RPAOFF{
        condition STAN_RPA == 0
        select stanfish from Stan_monfish given stanyr=stanfish_yr use linear where month=month}! every mon if RPA of
    case April {
        condition month==APR .and. STAN_RPA == 1
        select stanfish from Stan_monfish given stanyr=stanfish_yr use linear where month=month}! 
    case notApr {
        condition always 
        select flow from stan_rpa given stanyr=stanfish_yr use linear where month=month}
}*/

define stanmin {select flow from stan_rpa given stanyr=stanfish_yr use linear where month=month}

define stanmin_dv {alias stanmin kind 'fish-flow-req' units 'cfs'}

! Define revised total annual fish releases
! Base MIF + Enhanced flow based on estimated delivery, estimated inflow, and desired target storage
define stanfish_yr2 { select stanf from stan_yr given NMF = NMforecast1 use linear }

/* define stanfish_yr2 {
    case firstyr {
        condition wateryear == 1922 .and. month <= mar
        value 98.9 + stan_dem_est + min(204.,max(NMforecast3-((310.-stan_dem_est)-stan_dem_est)-1700.,0.0))
    }
    case march {
        condition month == mar
                value 98.9 + stan_dem_est + min(204.,max(NMforecast3-((310.-stan_dem_est)-stan_dem_est)-1700.,0.0))
        }
        case otherwise {
                condition always
                value 98.9 + stan_dem_estdv(prevMar) + min(204.,max(NMforecast3dv(prevMar)-((310.-stan_dem_estdv(prevMar))-stan_dem_estdv(prevMar))-1700.,0.0))
        }
} */

define stanfish_yr2DV {alias stanfish_yr2 units 'taf'}
define stanmin2 {select stanfish from stan_monfish given stanyr = stanfish_yr2 use linear
        where month = month
}
define stanmin2DV {alias stanmin2 units 'cfs'}

! Stanislaus River Temperature Management flow surrogates for June - Sep
!define stantemp {
!       case June_Sep {
!                condition month >= jun .and. month <= sep
!                select tflow from stan_temperature given stanyr = stanfish_yr2 use minimum where month = month}
!       case otherwise {
!            condition always
!            value 0.0}
!}

! Set limits on minimum fish flows for Reach 520 (Goodwin), CALSIM uses internal units of cfs
!goal setC_STANGDWNcycle1 { C_STANGDWN_mif < max(stanmin2,stantemp) }

goal setC_STANGDWNcycle1 { C_STANGDWN_mif < stanmin }
define C_STANGDWNInstreamTgt {value max(0., OIDInstreamToBeMet*TAF_cfs)}
define C_STANGDWNINSTGTDV {alias C_STANGDWNINSTREAMTGT kind 'output-cfs' units 'cfs'}
goal setC_STANGDWNINSTREAM1 {C_STANGDWNINSTREAM = C_STANGDWNINSTREAMTGT}
!goal setC_STANGDWNINSTREAM1 {C_STANGDWNINSTREAM < max(0., OIDInstreamToBeMet*TAF_cfs - stanmin)}
! Set limits on minimum fish flows for Reach 528 (Ripon), CALSIM uses internal units of cfs
!goal setC_STANRIPNcycle1 { C_STANRIPN_mif < max(stanmin2,stantemp) }
goal setC_STANRIPNcycle1 { C_STANRIPN_mif < stanmin }

