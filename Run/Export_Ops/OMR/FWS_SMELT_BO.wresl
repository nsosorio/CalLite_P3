/*************************************
! FWS_SMELT_BO.wresl
 
Z.Q. Richard Chen DWR 9/14/2010

FWS BO actions implementations
*************************************/
! FWS_SMELT_BO_RPA_Testing.wresl
!
! Implements 15 Dec 2008 FWS Delta Smelt BO RPA Actions 1-3.
! Action 1: Limit Exports so OMR flows >= -2,000 cfs (14-day avg.) w/ 5-day running avg. + 25%
! Action 2: Limit Exports so OMR flows >= -1,250 to -5,000 cfs (as determined weekly by SWG)
! Action 3: Limit Exports so OMR flows >= -1,250 to -5,000 cfs (14-day avg.) w/ 5-day running avg. +/- 25%
!
! Action 4, the fall X2 action in W and AN years, is not included in this model
!
! Action 5: Do not install HORB if delta smelt is a concern. If HORB installed (no smelt
! concerns) tie open TBP flap gates (until 15-May)
! HORB barrier is assumed to be in place but gates fully opened.
! See SoDeltaChannels code for this modification and other information used in this code.
!
! This code could be used as a prescriptive use of export restrictions either as part
! of or separate from B2 and EWA accounting.
!
! **********************************************************************************************
/* From 5.A.A.6.1.2 Action 1 Assumptions for CalSim II Modeling Purposes:
 * In the month of December in which Action 1 does not begin until December 21, for monthly
 * analysis, a background OMR flow must be assumed for the purpose of calculating a day-weighted
 * average for implementing a partial-month action condition. When necessary, the background
 * OMR flow for December was assumed to be -8,000 cfs.
 */
define OMR_background {        ! this is used as the background OMR condition in computing monthly values for partial month conditions
        case noA1{
                condition month>=JAN .and. month<=MAR
                value -5000.}
        case otherwise {
                condition always
                value -8000.}
}
! **********************************************************************************************
! Define triggers and offramps and target OMR flows for all Actions
!***********************************************************************************************
!ACTION 1
!Action 1 Turbidity Trigger
!Assumes monthly sum of unimpaired flows for four rivers in Sacramento River Basin (Sac, American, Yuba, and Feather) exceeding 20,000 cfs is a good
!but conservative indicator of turbidty (12NTU) at the three turbidity stations defined in the FWS BO ( Holland Cut, Prisoner's Point, and Victoria Canal).
define TurbT_Thresh {value 20000.}
define SAC_RI    {select SRI from sac_ri where  wateryear = wateryear, month = month}
define SRIdv {alias SAC_RI kind 'FLOW-CHANNEL' units 'CFS'}

define A1_TurbTdv {std kind 'RPA-A1' units 'NONE'}
define A1_TurbT {
        case Initialize {
            condition month==OCT .and. wateryear==BgnWY .or. OMRBOON == 0
                value 99.}
    case Oct_Dec {
            condition month>=OCT .and. month<DEC
                value 99.}
    case Oct_Mar {
                condition month>=OCT .and. month<MAR .and. SAC_RI<TurbT_Thresh
                value 99.}
        case ON_Dec {
        ! If triggered in December, it is assumed that the action will take place after December 21st for 14 days. (Dec 21 - Jan 3)
                condition month==DEC .and. SAC_RI>=TurbT_Thresh !.and. (day>=21)
                value 1.}
    case ON_Jan{
            ! If triggered in January, it is assumed that the action will take place after January 1st for 14 days. (Jan 1 - Jan 14)
                condition month==JAN .and. A1_TurbTdv(prevDec)==99. .and. SAC_RI>=TurbT_Thresh
                value 2.}
    case ON_Feb {
        ! If triggered in February, it is assumed that the action will take place after February 1st for 14 days. (Feb 1 - Feb 14)
                condition month==FEB .and. A1_TurbTdv(prevJan)==99. .and. A1_TurbTdv(prevDec)==99. .and. SAC_RI>=TurbT_Thresh
                value 3.}
    case ON_Mar {
        ! If triggered in March, it is assumed that the action will take place after March 1st for 14 days. (Mar 1 - Mar 14)
                condition month==MAR .and. A1_TurbTdv(prevJan)==99. .and.A1_TurbTdv(prevDec)==99. .and. A1_TurbTdv(prevFeb)==99. .and. SAC_RI>=TurbT_Thresh
                value 4.}
    case OFF {
        condition always
                value 99.}
}

goal setA1_TurbTdv {A1_TurbTdv = A1_TurbT}


define A1_TurbTCdv {std kind 'RPA-A1' units 'NONE'}
define A1_TurbTC {
        case Initialize {
                condition month==OCT .and. wateryear==BgnWY .or. OMRBOON == 0
                value 0.}
        case Oct_Dec {
                condition month>=OCT .and. month<DEC
                value 0.}
        case Oct_Mar {
                condition month>=OCT .and. month<MAR .and. SAC_RI<TurbT_Thresh
                value A1_TurbTCdv(-1)}
        case ON_Dec {
                condition month==DEC .and. SAC_RI>=TurbT_Thresh !.and. day>=21
                value 1.}
        case ON_Jan{
                condition month==JAN .and. A1_TurbTdv(prevDec)==99. .and. SAC_RI>=TurbT_Thresh
                value 1.}
        case ON_Feb {
                condition month==FEB .and. A1_TurbTdv(prevDec)==99. .and. A1_TurbTdv(prevJan)==99. .and. SAC_RI>=TurbT_Thresh
                value 1.}
        case ON_Mar {
                condition month==MAR .and. A1_TurbTdv(prevDec)==99. .and.A1_TurbTdv(prevJan)==99. .and. A1_TurbTdv(prevFeb)==99. .and. SAC_RI>=TurbT_Thresh
                value 1.}
        case OFF {
                condition always
                value A1_TurbTCdv(-1)}
}
goal setA1_TurbTCdv {A1_TurbTCdv = A1_TurbTC}

define A1_OMR_Targ { value -2000.}
define A1_OMR_Targdv {alias A1_OMR_Targ kind 'FLOW' units 'CFS'}

!************************************************************************************************
! ACTION 2
!define Freeportdv {alias Freeport kind 'FLOW-CHANNEL' units 'CFS'}
!define Vernalisdv {alias Vernalis kind 'FLOW-CHANNEL' units 'CFS'}

!Action 2 - X2 Threshold for OMR flows
define X2_A2 {
    case E_Roe {
                condition X2_last > 64.
        value 1}
    case W_Roe {
        condition always
        value 2}
}
define X2_A2dv {alias X2_A2 kind 'X2-POSITION-A2' units 'KM'}

! Hutton's methodology(12/16/08 appendix 4)to estimate prob of 3-day average SACR at Rio Vista > 90,000 cfs
!and 3-day average SJR at Vernalis > 10,000 cfs
!define RioVista_Freq {value min(max((Freeport*0.00289 - 146.)/100.,0.),1.)}
!define Vernalis_Freq {value min(max((Vernalis*0.00901 - 49.)/100.,0.),1.)}
define RioVista_3DayAvg {value (C_SacRV(-1) + C_SacRV(-2) + C_SacRV(-3))/3}
define Vernalis_3DayAvg {value (C_SJRVer(-1) + C_SJRVer(-2) + C_SJRVer(-3))/3}

!define RioVista_3DayAvgDV {alias RioVista_3DayAvg kind 'ROLLING-AVG' units 'CFS'}
!define Vernalis_3DayAvgDV {alias Vernalis_3DayAvg kind 'ROLLING-AVG' units 'CFS'}

! Suspension Trigger
define Suspen_trig {
    case suspension {
    	condition RioVista_3DayAvg >= 90000. .and. Vernalis_3DayAvg >= 10000.
!                condition Riovista_Freq * Vernalis_Freq >= 0.5
!                condition Riovista_Freq>=0.5.and.Vernalis_Freq >= 0.5
        value 1.}
    case otherwise {
        condition always
        value 0.}
}

define Suspen_trigdv {alias Suspen_trig kind 'TRIGGER' units 'NONE'}

define A2_OMR_Targ{
      case Suspension{
        condition Suspen_trig == 1.
        value OMR_background}
      case E_Roe{
        condition X2_A2==1.
        select X2_E_Roe
        from FWS_BO_A2_X2
        where  WYT=wyt_SAC}
      case W_Roe{
        condition always !X2_A2==2
        select X2_W_Roe
        from FWS_BO_A2_X2
        where  WYT=wyt_SAC}
}

define A2_OMR_Targdv {alias A2_OMR_Targ kind 'FLOW' units 'CFS'}

!***************************************************************************************************
!ACTION 3

!Action 3 temperature trigger:
!Sacramento Executive Airport air temperature is assumed to correlate with the three stations (Antioch, Mossdale, and Rio Vista) on a monthly basis.
!Then, assuming the avergae monthly temperature occurs in mid-month, daily water temperature is estiamted by interpolation.
!Dates of occurence for each year is pre-processed and provided as an input to CALSIM II.
define temp_trig_mo    {
    case NoClimateChange {
    	condition Climate_Proj == 0
	select WMonth_0 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario1 {
    	condition Climate_Proj == 1
    	select WMonth_1 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario2 {
    	condition Climate_Proj == 2
    	select WMonth_2 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario3 {
    	condition Climate_Proj == 3
    	select WMonth_3 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario4 {
    	condition Climate_Proj == 4
    	select WMonth_4 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario5 {
    	condition Climate_Proj == 5
    	select WMonth_5 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario6 {
    	condition Climate_Proj == 6
    	select WMonth_6 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario7 {
    	condition Climate_Proj == 7
    	select WMonth_7 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario8 {
    	condition Climate_Proj == 8
    	select WMonth_8 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario9 {
    	condition Climate_Proj == 9
    	select WMonth_9 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario10 {
    	condition Climate_Proj == 10
    	select WMonth_10 from FWS_BO_A3_Temp where  YEAR= wateryear}    	
    }
define temp_trig_da    {
    case NoClimateChange {
    	condition Climate_Proj == 0
    	select Day_0 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario1 {
    	condition Climate_Proj == 1
    	select Day_1 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario2 {
    	condition Climate_Proj == 2
    	select Day_2 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario3 {
    	condition Climate_Proj == 3
    	select Day_3 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario4 {
    	condition Climate_Proj == 4
    	select Day_4 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario5 {
    	condition Climate_Proj == 5
    	select Day_5 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario6 {
    	condition Climate_Proj == 6
    	select Day_6 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario7 {
    	condition Climate_Proj == 7
    	select Day_7 from FWS_BO_A3_Temp where  YEAR= wateryear}
    case CC_Scenario8 {
    	condition Climate_Proj == 8
    	select Day_8 from FWS_BO_A3_Temp where  YEAR= wateryear}    	
    case CC_Scenario9 {
    	condition Climate_Proj == 9
    	select Day_9 from FWS_BO_A3_Temp where  YEAR= wateryear}    	
    case CC_Scenario10 {
    	condition Climate_Proj == 10
    	select Day_10 from FWS_BO_A3_Temp where  YEAR= wateryear}    	    	
   }

define temp_trig_modv {alias temp_trig_mo kind 'TRIGGER' units 'NONE'}
define temp_trig_dadv {alias temp_trig_da kind 'TRIGGER' units 'NONE'}

!Action 3 biological trigger:
!Reads the month and the day that it is most likely to observe a spent female smelt in SKT or at pumping facilities.
define bio_trig_mo    {select Values from FWS_BO_A3_Bio where  Parameter=1}
define bio_trig_da    {select Values from FWS_BO_A3_Bio where  Parameter=2}

define bio_trig_modv {alias bio_trig_mo kind 'TRIGGER' units 'NONE'}
define bio_trig_dadv {alias bio_trig_da kind 'TRIGGER' units 'NONE'}

!Action 3 trigger:
define A3_trig_da{
    case Temp {
        condition temp_trig_mo<bio_trig_mo
        value  temp_trig_da}
    case Bio {
        condition temp_trig_mo>bio_trig_mo
        value  bio_trig_da}
    case same_mo {
        condition always!temp_trig_mo==bio_trig_mo
        value  min(temp_trig_da, bio_trig_da)}
}
define A3_trig_mo{ value min(bio_trig_mo, temp_trig_mo)}

define A3_trig_dadv {alias A3_trig_da kind 'TRIGGER' units 'NONE'}
define A3_trig_modv {alias A3_trig_mo kind 'TRIGGER' units 'NONE'}

!Action 3 offramp:
!Determines offramp dates based on the criteria stated in the lookup table. Always set to June 30 right now, NSO 02/04/2022
define temp_offramp_mo    {select WMonth from FWS_BO_A3_Offramp where  WYT= wyt_SAC}
define temp_offramp_da    {select Day from FWS_BO_A3_Offramp where  WYT=wyt_SAC}
define A3_offramp_da{
    case Temperature {
        condition temp_offramp_mo<JUN
        value  temp_offramp_da}
    case Temporal {
        condition temp_trig_mo>JUN
        value  30.}
    case same_mo {
        condition always !temp_trig_mo==JUN
        value  min(temp_offramp_da, 30.)}
}

define A3_offramp_mo{ value min(9., temp_offramp_mo)}

define temp_offrmp_modv {alias temp_offramp_mo kind 'TRIGGER' units 'NONE'}
define temp_offrmp_dadv {alias temp_offramp_da kind 'TRIGGER' units 'NONE'}
define A3_offramp_dadv {alias A3_offramp_da kind 'TRIGGER' units 'NONE'}
define A3_offramp_modv {alias A3_offramp_mo kind 'TRIGGER' units 'NONE'}
define X2_lastdv {alias X2_last kind 'X2-POSITION-PREV' units 'KM'}


! Action 3 - X2 Threshold for OMR flows
define X2_A3 { ! REPLACE THIS EQUATION, NSO 01/17/2022
    case Initialize {
            condition month==OCT .and. wateryear==BgnWY .or. OMRBOON == 0
                value 3.}
    case J_E_Roe {
                condition month==JUN .and. X2_lastdv(-1) > 74.
        value 1.}
    case J_W_Roe {
                condition month==JUN .and. X2_lastdv(-1) < 64.
        value 2.}
    case J_in_btw {
        condition  month==JUN
        value 3.}
    case E_Roe {
                condition X2_last > 74.
        value 1.}
    case W_Roe {
                condition  X2_last < 64.
        value 2.}
    case in_btw {
        condition  always
        value 3.}
}

define X2_A3dv {alias X2_A3 kind 'X2-POSITION-A3' units 'KM'}

define A3_OMR_Targ{
      case E_Roe{
                condition X2_A3==1.
        select X2_E_Roe
        from FWS_BO_A3_X2
        where  WYT=wyt_SAC}
      case W_Roe{
                condition X2_A3==2.
        select X2_W_Roe
        from FWS_BO_A3_X2
        where  WYT=wyt_SAC}
      case otherwise {
        condition always
        select X2_in_between
        from FWS_BO_A3_X2
        where  WYT=wyt_SAC}
}

define A3_OMR_Targdv {alias A3_OMR_Targ kind 'FLOW' units 'CFS'}

!OMR FWS RPA 14 day average
define OMR_RPA_1{ ! REPLACE THIS EQUATION, NSO 01/17/2022
    case Initialize {
            condition month==OCT .and. wateryear==BgnWY .or. OMRBOON == 0
                value -99999.}
        case Oct_Dec {
            condition month>=OCT .and. month<DEC
                value -99999.}
! **********************************************************************************************
! December Cases
    case OFF_DEC {
        condition month==DEC .and. A1_TurbT==99. .and. (day>=1 .and. day<=20)
                value -99999.}
    case pre_A1_DEC { ! Turb thresh triggered in December but it is not December 21 yet.
        condition month==DEC .and. A1_TurbT==1. .and. (day<21)
                value OMR_background}
    case A1_DEC { ! ! Turb thresh triggered in December and it is December 21 and later.
        condition month==DEC .and. A1_TurbT==1. .and. (day>=21)
                !value (OMR_background*20.+A1_OMR_Targ*(daysin-20.))/daysin}
                value A1_OMR_Targ}
    case otherwise_DEC {
                condition month==DEC
                value -99999.}
! **********************************************************************************************
! January Cases
    case A1_Dec_Jan{ ! Turb thresh triggered in December and current month is Jan
                condition month==JAN .and. A1_TurbTdv(prevDec)==1. .and. day<=3
        ! Average of -2000 cfs for 3 days and a Action 2 OMR for the remainder of the month.
        !value (A1_OMR_Targ*3.+A2_OMR_Targ*28.)/daysin}
        value A1_OMR_targ}
    case A1_Dec_A2_Jan { ! Turb thresh triggered in December and current month is Jan
                condition month==JAN .and. A1_TurbTdv(prevDec)==1. .and. day>3
        ! Average of -2000 cfs for 3 days and a Action 2 OMR for the remainder of the month.
        !value (A1_OMR_Targ*3.+A2_OMR_Targ*28.)/daysin}
        value A2_OMR_Targ}

    case A1_JAN{ ! Turb thresh triggered in this month of January is assumed for Jan 1-14.
        condition month==JAN .and. A1_TurbT==2. .and. day<=14
        ! Average of -2000 cfs for 14 days and Action 2 OMR for the remainder of the month.
        value A1_OMR_targ}
    case A1_A2_JAN{ ! Turb thresh triggered in this month of January and Action 1 went on from Jan 1-14. The rest of this month is for Action 2.
        condition month==JAN .and. A1_TurbT==2. .and. day>14
        ! Average of -2000 cfs for 14 days and Action 2 OMR for the remainder of the month.
        value A2_OMR_Targ}

    case otherwise_JAN {
            condition month==JAN
            value -99999.}
! **********************************************************************************************
! February Cases
    case A1_DJ_A3_F { ! Turb thresh was triggered in January and Action 3 is triggered in February
		condition month==FEB .and. A1_TurbTdv(prevJan)==2. .and.  A3_trig_mo==5. .and. day>=A3_trig_da
		! Action 1 already took place from Jan 1-14. Action 2 then took place from Jan 15 to the end. Only Action 3 then takes place in beginning of Feb.
        value A3_OMR_Targ}
    case A1_DJ_A3_F2 { ! Turb thresh was triggered in December and Action 3 is triggered in February
        condition month==FEB .and. A1_TurbTdv(prevDec)==1. .and.  A3_trig_mo==5. .and. day>=A3_trig_da
        value A2_OMR_Targ}
    case A1_DJ_A3_F3 { ! Turb thresh was triggered in December and Action 3 is triggered in February
        condition month==FEB .and. A1_TurbTdv(prevDec)==1. .and.  A3_trig_mo==5. .and. day>=A3_trig_da
        value A3_OMR_Targ}

    case A1_DJ { ! Turb thresh was triggered in January and Action 3 is triggered after February
    	condition month==FEB .and. A1_TurbTdv(prevJan)==2. .and.  A3_trig_mo>5.
		value A2_OMR_Targ}
    case A1_DJ2 { ! Turb thresh triggered in December and Action 3 is triggered after February
    	condition month==FEB .and. A1_TurbTdv(prevDec)==1. .and.  A3_trig_mo>5.
		value A2_OMR_Targ}

    case A1_F_A3_F { ! Turb thresh triggered in same month of February and Action 3 is triggered before February 14  !!!!!!!!!COME BACK HERE LATER!!!!!!!!!
        condition month==FEB .and. A1_TurbT==3. .and.  A3_trig_mo==5. .and. A3_trig_da<=14 .and. day<=14
        ! Choose the most limiting OMR target since both Action 1 and Action 3 are happening at the same time.
        value max(A1_OMR_Targ, A3_OMR_Targ)}
    case A1_F_A3_F2 { ! Turb thresh triggered in same month of February and Action 3 is triggered on February !!!!!!!!!COME BACK HERE LATER!!!!!!!!!
        condition month==FEB .and. A1_TurbT==3. .and.  A3_trig_mo==5. .and. A3_trig_da>14 .and. day>14
        value A3_OMR_Targ}

    case A1_F { ! Turb thresh triggered in same month of February and Action 3 is triggered after February
        condition month==FEB .and. A1_TurbT==3. .and.  A3_trig_mo>5. .and. day<=14
        value A1_OMR_Targ}
    case A1_F2 { ! Turb thresh triggered in same month of February and Action 3 is triggered after February
        condition month==FEB .and. A1_TurbT==3. .and.  A3_trig_mo>5. .and. day>14
        value A2_OMR_Targ}

    case otherwise_FEB {
        condition month==FEB
        value -99999.}
! **********************************************************************************************
! March Cases
    case A1_F_M { ! Turb thresh was triggered in February and Action 3 is triggered after March
    	condition month==MAR .and. A1_TurbTdv(prevFeb)==3. .and.  A3_trig_mo>6.
		value A2_OMR_Targ}	

    case A1_M { ! Turb thresh is triggered in same month of March and Action 3 is triggered on March.
        condition month==MAR .and. A1_TurbT==4. .and.  A3_trig_mo==6. .and. A3_trig_da<=14 .and. day <= 14
        ! Choose the most limiting OMR target since both Action 1 and Action 3 are happening at the same time.
        value max(A1_OMR_Targ, A3_OMR_Targ)}
    case A1_M2 { ! Turb thresh is triggered in same month of March and Action 3 is triggered on March.
        condition month==MAR .and. A1_TurbT==4. .and.  A3_trig_mo==6. .and. A3_trig_da>14 .and. day > 14
        value A3_OMR_Targ}

    case A3_FEB_M { ! Turb thresh was triggered in January and Action 3 was triggered on February.
    	condition month==MAR .and. A1_TurbTdv(prevJan)==2. .and.  A3_trig_mo==5.
		value A3_OMR_Targ}
    case A3_FEB_M2 { ! Turb thresh was triggered in December and Action 3 was triggered on February.
        condition month==MAR .and. A1_TurbTdv(prevDec)==1. .and.  A3_trig_mo==5.
        value A3_OMR_Targ}
    case A3_FEB_M3 { ! Turb thresh was triggered in February and Action 3 was triggered on February.
        condition month==MAR .and. A1_TurbTdv(prevFeb)==3. .and.  A3_trig_mo==5.
        value A3_OMR_Targ}
    case A3_FEB_M4 { ! Turb thresh is triggered in March and Action 3 was triggered on February.
        condition month==MAR .and. A1_TurbT==4. .and.  A3_trig_mo==5. .and. day<=14
        value max(A1_OMR_Targ, A3_OMR_Targ)}
    case A3_FEB_M5 { ! Turb thresh is triggered in March and Action 3 was triggered on February.
        condition month==MAR .and. A1_TurbT==4. .and.  A3_trig_mo==5. .and. day>14
        value A3_OMR_Targ}
        
    case A3_M { ! Turb thresh was triggered in February and Action 3 is triggered in March.
    	condition month==MAR .and. A1_TurbTdv(prevFeb)==3. .and.  A3_trig_mo==6. .and. day>=A3_trig_da
        value A3_OMR_Targ}
    case A3_M2 { ! Turb thresh was triggered in January and Action 3 is triggered in March.
        condition month==MAR .and. A1_TurbTdv(prevJan)==2. .and.  A3_trig_mo==6. .and. day>=A3_trig_da
        value A3_OMR_Targ}
    case A3_M3 { ! Turb thresh was triggered in December and Action 3 is triggered in March.
        condition month==MAR .and. A1_TurbTdv(prevDec)==1. .and.  A3_trig_mo==6. .and. day>=A3_trig_da
        value A3_OMR_Targ}

    case A3_M4 { ! Action 3 is to be triggered in April and the turb thresh is triggered in the same month of March.
        condition month==MAR .and. A3_trig_mo==7. .and. A1_TurbTC==1 .and. day<=14
        !value (A1_OMR_Targ*14.+A2_OMR_Targ*(daysin-17))/daysin}
        value A1_OMR_Targ}
    case A3_M5 { ! Action 3 is to be triggered in April and the turb thresh is triggered in the same month of March.
        condition month==MAR .and. A3_trig_mo==7. .and. A1_TurbTC==1 .and. day>14
        !value (A1_OMR_Targ*14.+A2_OMR_Targ*(daysin-17))/daysin}
        value A2_OMR_Targ}
    case otherwise_MAR {
        condition month==MAR
        value -99999.}
! **********************************************************************************************
! April Cases
    case A3_APR { ! Action 3 has already been triggered before April
            condition month==APR .and. A3_trig_mo<7.
            value A3_OMR_Targ}
    case A3_APR3 { ! Action 3 is triggered in the same month of April and the turb thresh never triggered
            condition month==APR .and. A3_trig_mo==7. .and. day>=A3_trig_da .and. A1_TurbTdv(prevDec)==99. .and. A1_TurbTdv(prevJan)==99. .and. A1_TurbTdv(prevFeb)==99. .and. A1_TurbTdv(prevMar)==99.
            !value (OMR_background*(A3_trig_da-1.)+A3_OMR_Targ*(daysin-A3_trig_da+1.))/daysin}
            value A3_OMR_targ}
    case A3_APR2 { ! Action 3 is triggered in the same month of April
            condition month==APR .and. A3_trig_mo==7. .and. day>=A3_trig_da
            value A3_OMR_Targ}
    case otherwise_APR {
            condition month==APR
            value -99999.}
! **********************************************************************************************
! May Cases
    case A3_MAY { ! Action 3 offramp starts in May
            condition month==MAY .and. A3_offramp_mo==8. .and. day<A3_offramp_da
            value OMR_background}
    case A3_MAY2 { ! Action 3 offramp starts in May
            condition month==MAY .and. A3_offramp_mo==8. .and. day>=A3_offramp_da
            value A3_OMR_Targ}

    case A3_MAY_J { ! Action 3 offramp starts in June
            condition month==MAY .and. A3_offramp_mo==9.
            value A3_OMR_Targ}
    case otherwise_MAY {
            condition month==MAY
            value -99999.}
! **********************************************************************************************
! June Cases
    case A3_JUN { ! Action 3 offramp starts in the same month of June
            condition month==JUN .and. A3_offramp_mo==9. .and. day<A3_offramp_da
            value OMR_background}
    case A3_JUN2 { ! Action 3 offramp starts in the same month of June
            condition month==JUN .and. A3_offramp_mo==9. .and. day>=A3_offramp_da
            value A3_OMR_Targ}
    case otherwise_JUN {
    condition always
            value -99999.}
}

define OMR_RPA_1dv {alias OMR_RPA_1 kind 'FLOW' units 'CFS'}

!Check for QA/QC
define OMR_RPA_1con{
    case Initialize {
            condition month==OCT .and. wateryear==BgnWY
                value -99999.}
        case Oct_Dec {
            condition month>=OCT .and. month<DEC
                value -99999.}
    case OFF_DEC {
        condition month==DEC .and. A1_TurbT==99.
                value -99999.}
    case A1_DEC {
        condition month==DEC .and. A1_TurbT==1.
                value 1.}
        case A1_Dec_Jan{
                condition month==JAN .and. A1_TurbTdv(-1)==1.
                value 2.}
    case A1_JAN{
        condition month==JAN .and. A1_TurbT==2.
                value 3.}
    case A1_DJ_A3_F {
        condition month==FEB .and. A1_TurbTdv(-1)==2. .and.  A3_trig_mo==5.
                value 4.}
    case A1_DJ_A3_F2 {
                condition month==FEB .and. A1_TurbTdv(-2)==1. .and.  A3_trig_mo==5.
                value 5.}
        case A1_DJ {
        condition month==FEB .and. A1_TurbTdv(-1)==2. .and.  A3_trig_mo>5.
                value 6.}
        case A1_DJ2 {
        condition month==FEB .and. A1_TurbTdv(-2)==1. .and.  A3_trig_mo>5.
                value 7.}

    case A1_F_A3_F {
        condition month==FEB .and. A1_TurbT==3. .and.  A3_trig_mo==5.
                value 8.}
    case A1_F {
        condition month==FEB .and. A1_TurbT==3. .and.  A3_trig_mo>5.
                value 9.}
        case A1_F_M {
        condition month==MAR .and. A1_TurbTdv(-1)==3. .and.  A3_trig_mo>6.
                value 10.}
    case A1_M {
        condition month==MAR .and. A1_TurbT==4. .and.  A3_trig_mo==6.
                value 11.}
    case A3_FEB_M {
        condition month==MAR .and. A1_TurbTdv(-2)==2. .and.  A3_trig_mo==5.
                value 12.}
    case A3_FEB_M2 {
        condition month==MAR .and. A1_TurbTdv(-3)==1. .and.  A3_trig_mo==5.
                value 13.}
    case A3_FEB_M3 {
        condition month==MAR .and. A1_TurbTdv(-1)==3. .and.  A3_trig_mo==5.
                value 14.}
    case A3_FEB_M4 {
        condition month==MAR .and. A1_TurbT==4. .and.  A3_trig_mo==5.
                value 15.}
    case A3_M {
        condition month==MAR .and. A1_TurbTdv(-1)==3. .and.  A3_trig_mo==6.
                value 16.}
    case A3_M2 {
        condition month==MAR .and. A1_TurbTdv(-2)==2. .and.  A3_trig_mo==6.
                value 17.}
    case A3_M3 {
        condition month==MAR .and. A1_TurbTdv(-3)==1. .and.  A3_trig_mo==6.
                value 18.}
        case A3_M4 {
                condition month==MAR .and. A1_TurbTdv(-3)==1. .and.  A3_trig_mo==7.
                value 18.5}
        case A3_APR {
                condition month==APR .and. A3_trig_mo<7.
                value 19.}
        case A3_APR2 {
                condition month==APR .and. A3_trig_mo==7.
                value 19.5}
    case A3_MAY {
                condition month==MAY .and. A3_offramp_mo==8.
                value 20.}
    case A3_MAY_J {
                condition month==MAY .and. A3_offramp_mo==9.
                value 21.}
    case A3_JUN {
                condition month==JUN .and. A3_offramp_mo==9.
                value 22.}
    case otherwise {
        condition always
                value 23.}
}

define OMR_RPA_1condv {alias OMR_RPA_1con kind 'TRIGGER' units 'NONE'}


!define NoA1_OMR_Targ { value -5000.}
/*define NoA1_con{
       case initial {
         condition month==OCT .and. wateryear==BgnWY
         value 0.}
       case JAN {
        condition C408(-1)<=NoA1_OMR_Targ
        value 1.}
       case FEB {
        condition C408(-1)<=NoA1_OMR_Targ .or. C408(-2)<=NoA1_OMR_Targ
        value 1.}
       case MAR {
        condition C408(-1)<=NoA1_OMR_Targ .or. C408(-2)<=NoA1_OMR_Targ .or. C408(-3)<=NoA1_OMR_Targ
        value 1.}
       case otherwise {
        condition always
        value 0.}
 }

define NoA1_condv {alias NoA1_con kind 'TRIGGER' units 'NONE'}
     */

 
define OMR_RPA_NoA1{
    case JAN {
                condition month==JAN .and. A1_TurbT==99.  .or. OMRBOON == 0 !.and. NoA1_con==1.
                value OMR_background}
        case FEB {
                condition month==FEB .and. A1_TurbT==99. .and. A3_trig_mo==5. .and. day<A3_trig_da
                value OMR_background}
       case FEB3 {
                condition month==FEB .and. A1_TurbT==99. .and. A3_trig_mo==5. .and. day>=A3_trig_da  
                value A3_OMR_Targ}


        case FEB_2 {
                condition month==FEB .and. A1_TurbT==99. .and. A3_trig_mo>5. !.and. NoA1_con==1.
                value OMR_background}
        case MAR {
                condition month==MAR .and. A1_TurbT==99. .and. A3_trig_mo<6. !.and. NoA1_con==1.
                value A3_OMR_Targ}
        case MAR_2 {
                condition month==MAR .and. A1_TurbT==99. .and. A3_trig_mo==6. .and. day<A3_trig_da    !.and. NoA1_con==1.
                value OMR_background}
        case MAR_2a {
                condition month==MAR .and. A1_TurbT==99. .and. A3_trig_mo==6. .and. day>=A3_trig_da     !.and. NoA1_con==1.
                value A3_OMR_Targ}

        case MAR_3 { ! Action 3 is to be triggered starting on April
                condition month==MAR .and. A1_TurbT==99. .and. A3_trig_mo>6. !.and. NoA1_con==1.
                value OMR_background}
        case othnoA1 {
                condition month>=JAN .and. month<=MAR
                value OMR_background}
        case APR { ! Action 3 was triggered before April
                condition month==APR .and. A1_TurbT==99. .and. A3_trig_mo<7.    !.and. NoA1_con==1.
                value A3_OMR_Targ}
        case APR_2 { ! Action 3 was triggered at April
                condition month==APR .and. A1_TurbT==99. .and. A3_trig_mo==7. .and. day<A3_trig_da     !.and. NoA1_con==1.
                value OMR_background}
        case APR_2a { ! Action 3 was triggered at April
                condition month==APR .and. A1_TurbT==99. .and. A3_trig_mo==7. .and. day>=A3_trig_da     !.and. NoA1_con==1.
                value A3_OMR_Targ}

    case otherwise{
        condition always
                value -99999.}
}

define OMR_RPA_NoA1dv {alias OMR_RPA_NoA1 kind 'FLOW' units 'CFS'}

/*define OMR_RPA_NoA1con{
    case JAN {
                condition month==JAN .and. A1_TurbT==99. .and. NoA1_con==1.
                value 1.}
    case FEB {
                condition month==FEB .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo==5.
                value 2.}
    case FEB_2 {
                condition month==FEB .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo>5.
                value 3.}
    case MAR {
                condition month==MAR .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo<6.
                value 4.}
    case MAR_2 {
                condition month==MAR .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo==6.
                value 5.}
    case MAR_3 {
                condition month==MAR .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo>6.
                value 6.}
    case APR {
                condition month==APR .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo<7.
                value 7.}
    case APR_2 {
                condition month==APR .and. A1_TurbT==99. .and. NoA1_con==1.  .and. A3_trig_mo==7.
                value 8.}
    case otherwise{
        condition always
                value 9.}
}
define OMRRPANoA1condv {alias OMR_RPA_NoA1con kind 'TRIGGER' units 'NONE'}
 */

define OMR_RPA_daily {value max(OMR_RPA_1,OMR_RPA_NoA1)}

! Calculate 14-day average
define OMR_RPA_14daysum {sum(i=-14,-1,1) OMR_RPA_dailyDV(i)}
!define OMR_RPA_14dayavg {std kind 'FLOW-REG' units 'CFS'}
!goal set_OMR_RPA_rollavg { OMR_RPA_14dayavg = (OMR_RPA_14daysum +  OMR_RPA_daily)/14 }
define OMR_RPA_14dayavg {value OMR_RPA_14daysum/14}

! Calculate 5-day average
define OMR_RPA_5daysum {sum(i=-5,-1,1) OMR_RPA_dailyDV(i)}
!define OMR_RPA_5dayavg {std kind 'FLOW-REG' units 'CFS'}
!goal set_OMR_RPA_5day_rollavg { OMR_RPA_5dayavg = (OMR_RPA_5daysum +  OMR_RPA_daily)/5 }
define OMR_RPA_5dayavg {value OMR_RPA_5daysum/5}

/*goal limit_OMR_RPA_5day {
	lhs OMR_RPA_5dayavg
	
	case action {
		condition OMR_RPA_daily >= -12000.
        rhs 1.25*OMR_RPA_14dayavg
        lhs>rhs penalty 0}
    case None {
        condition always
        rhs -99999.}
}*/
!Put an additional constraint so that 5 day OMR is not negative more than 25% of the 14 day OMR
/*define OMR_RPA_5day { ! REPLACE THIS EQUATION, NSO 01/17/2022
      case Action {
            condition OMR_RPA >= -12000.
            value 1.25*OMR_RPA}
      case None {
            condition always
            value -99999.}
}*/

! Use Paul Hutton's regression equation to determine an aggregate based on a determination of whether
! the 5 day or the 14 day will control
!define OMR_RPA_FWS {value max(OMR_RPA_14dayavg,(OMR_RPA_5dayavg+389.)/1.02)} ! REPLACE THIS EQUATION, NSO 01/17/2022
define OMR_RPA_FWS {value max(OMR_RPA_14dayavg,OMR_RPA_5dayavg)} ! REPLACE THIS EQUATION, NSO 01/17/2022

!QA/QC

define OMR_RPA_dailydv {alias OMR_RPA_daily  kind 'FLOW-REG' units 'CFS'} ! for output
!define OMR_RPA5d {alias OMR_RPA_5day  kind 'FLOW-REG' units 'CFS'}
define OMR_RPA_FWSdv {alias OMR_RPA_FWS  kind 'FLOW-REG' units 'CFS'} 

!
