/************************************
Antioch_data.wresl

Hao Xie DWR 6/24/2010

ARTIFICIAL NEURAL NETWORK IMPLEMENTATION - ANTIOCH

Antioch salinity standard:
Average mean daily EC may not exceed 1.5 mmhos during the April 15 to May 5 period.

This standard is applied during the whole month of April only.

************************************/


! calculate previous month's value of salinity
define AN_EC_Month_sv {
  case D1485Off{
    condition AN_DLTSW == 0
    value 99000.}
  case lastWaterYear {
    condition  month == Oct
      value  AnnEC(C_Hood(-5),C_Hood(-4),C_Hood(-3),C_Hood(-2),C_Hood(-1),
               D_ExpTD(-5),D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
               SJR_ANN(-5),SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),
               DXC_daysopen(-5),DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),
               net_DICU(-5),net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),
               sac_oth(-5),sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),
               exp_oth(-5),exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),
               VERNWQFINAL(-5),VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),
               int(daysindv(-5)),int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),
               int(AN),int(monthly_avg),12,(wateryear-1))}

  case others {
    condition always
      value  AnnEC(C_Hood(-5),C_Hood(-4),C_Hood(-3),C_Hood(-2),C_Hood(-1),
               D_ExpTD(-5),D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
               SJR_ANN(-5),SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),
               DXC_daysopen(-5),DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),
               net_DICU(-5),net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),
               sac_oth(-5),sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),
               exp_oth(-5),exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),
               VERNWQFINAL(-5),VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),
               int(daysindv(-5)),int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),
               int(AN),int(monthly_avg),(month-1),wateryear)}
}

define AN_EC_Month {std kind 'SALINITY' units 'UMHOS/CM'}
goal setAN_EC_MON {AN_EC_Month = AN_EC_Month_sv}

/***********************************
Holly Canada, DWR (05/03/2012)
Code modified from OCAP 2008 study.
D-1485 Standard:
Average mean daily EC may not exceed 1.5 mmhos during the April 15 to May 5 period.
This standard is applied during the whole month of April only.
************************************/

if int(AN_DLTSW)==3 {
!****************************************************************************************

! define the EC standard for Antioch (millimhos/cm)
define AN_EC_STD_lookup {
  case Apr {
    condition  month == APR
    select     ECstandard1
    from       salinity_std_aww
    where      month=month}
  case NoStandard {
    condition  always
    value  99.0}
}
define AN_EC_STD_sv { value AN_EC_STD_lookup * 1000.0 }
define AN_EC_STD {std kind 'SALINITY' units 'UMHOS/CM'}
goal ANECstandout {AN_EC_STD = AN_EC_STD_sv}

!****************************************************************************************
!get slope and intercept for constraint exp<=m*sac+b

define AN_b_sv {
  case control{
    condition month == APR
    value  AnnLineGen(C_Hood_ANN(-4),C_Hood_ANN(-3),C_Hood_ANN(-2),C_Hood_ANN(-1),
                    D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
                    SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),SJR_ann_est,
                    DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),DXC_est,
                    net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),net_delta_cu,
                    sac_oth(-4),sac_oth(-3),sac_oth(-2),sac_oth(-1),sac_oth_est,
                    exp_oth(-4),exp_oth(-3),exp_oth(-2),exp_oth(-1),exp_oth_est,
                    VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),VERNWQFINALsv,
                    int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),daysin,
                    AN_EC_STD_sv,line_EM_lo,line_EM_hi,
                    int(AN),int(intercept),int(ann_type),month,wateryear,4)}
  case other {
    condition  always
    value 999999.}
}
define AN_m_sv {
  case reducecalls {
    condition  AN_b_sv >= 999990.
    value 0.}
  case control{
    condition month == APR
    value  AnnLineGen(C_Hood_ANN(-4),C_Hood_ANN(-3),C_Hood_ANN(-2),C_Hood_ANN(-1),
                    D_ExpTD(-4),D_ExpTD(-3),D_ExpTD(-2),D_ExpTD(-1),
                    SJR_ANN(-4),SJR_ANN(-3),SJR_ANN(-2),SJR_ANN(-1),SJR_ann_est,
                    DXC_daysopen(-4),DXC_daysopen(-3),DXC_daysopen(-2),DXC_daysopen(-1),DXC_est,
                    net_DICU(-4),net_DICU(-3),net_DICU(-2),net_DICU(-1),net_delta_cu,
                    sac_oth(-4),sac_oth(-3),sac_oth(-2), sac_oth(-1), sac_oth_est,
                    exp_oth(-4),exp_oth(-3),exp_oth(-2), exp_oth(-1), exp_oth_est,
                    VERNWQFINAL(-4),VERNWQFINAL(-3),VERNWQFINAL(-2),VERNWQFINAL(-1),VERNWQFINALsv,
                    int(daysindv(-4)),int(daysindv(-3)),int(daysindv(-2)),int(daysindv(-1)),daysin,
                    AN_EC_STD_sv,line_EM_lo,line_EM_hi,
                    int(AN),int(slope),int(ann_type),month,wateryear,4)}
  case other {
    condition  always
    value 0.}
}
define AN_m {lower unbounded upper unbounded kind 'SLOPE' units 'NONE'}
define AN_b {lower unbounded upper unbounded kind 'INTERCEPT' units 'NONE'}
goal setAN_m {AN_m = AN_m_sv}
goal setAN_b {AN_b = AN_b_sv}

!********************************************************************
!Get the required Sac flow for ZERO exports
define AN_Sac_ZeroExp_sv1 {
  case NoSalinityControlPossible{
    condition abs(AN_m_sv) <= 0.001 .and. int(AN_b_sv) == 0
    value 0.}
  case NegSlope{
    condition AN_m_sv <= 0.0
    value 0.}
  case NegCarriage{
    condition AN_m_sv >= 1.0
    value 0.}
  case control{
    condition month == Apr
    value -AN_b_sv/AN_m_sv}
  case other {
    condition  always
    value 0.}
}
define AN_Sac_ZeroExp_sv2 {value max(0.0,AN_Sac_ZeroExp_sv1)}
define AN_Sac_ZeroExp {lower unbounded upper unbounded kind 'FLOW' units 'CFS'}
goal setAN_Sac_ZeroExp {AN_Sac_ZeroExp = AN_Sac_ZeroExp_sv2}

}

/*
else {
	define AN_EC_STD_lookup {value 99.} 
	define AN_Sac_ZeroExp_sv1 {value 0.}
	define AN_m_sv {value 0.}
	define AN_b_sv {value 999999.}
}
	
*/